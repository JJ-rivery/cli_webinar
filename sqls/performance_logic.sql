/* SQL for Logic Step "create fact_fb_ads_performance table" */

select fact.*,
creatives._creative_id as creative_id,
creatives._creative_name as creative_name,
creatives._link as link_url
from (
select
fact._ACCOUNT_NAME as account_name,
fact._FREQUENCY as frequency,
fact._ACCOUNT_ID as account_id,
fact._CTR as ctr,
fact._UNIQUE_CTR as unique_ctr,
fact._UNIQUE_CLICKS as unique_clicks,
fact._DATE_START as date_start,
fact._CAMPAIGN_ID as campaign_id,
fact._CAMPAIGN_NAME as campaign_name,
fact._ADSET_ID as adset_id,
fact._ADSET_NAME as adset_name,
fact._AD_ID as ad_id,
fact._AD_NAME as ad_name,
fact._PUBLISHER_PLATFORM as publisher_platform,
fact._PLATFORM_POSITION as platform_position,
fact._IMPRESSIONS as impressions,
fact._DATE_STOP as date_stop,
fact._CLICKS as clicks,
fact._REACH as reach,
fact._CPC as cpc,
fact._UNIQUE_LINK_CLICKS_CTR as unique_link_clicks_ctr,
fact._INLINE_LINK_CLICKS as inline_link_clicks,
fact._SPEND as spend,
fact._UNIQUE_INLINE_LINK_CLICK_CTR as unique_inline_link_click_ctr,
fact._CPM as cpm,
max(case when video_p100.value:_action_type::string='video_view' then video_p100.value:_value::int else null end) as video_p100_watched,
max(case when video_p95.value:_action_type::string = 'video_view'then video_p95.value:_value::int else null end) as video_p95_watched,
max(case when video_p75.value:_action_type::string = 'video_view'then video_p75.value:_value::int else null end) as video_p75_watched,
max(case when video_p50.value:_action_type::string = 'video_view'then video_p50.value:_value::int else null end) as video_p50_watched,
max(case when video_p25.value:_action_type::string = 'video_view'then video_p25.value:_value::int else null end) as video_p25_watched,
max(case when video_avg.value:_action_type::string = 'video_view'then video_avg.value:_value::int else null end) as video_avg_time_watched,
-- actions 
max(case when actions.value:_action_type::string='purchase' then actions.value:_value::int else null end) as purchase,
max(case when actions.value:_action_type::string='app_install' then actions.value:_value::int else null end) as app_installs,
max(case when actions.value:_action_type::string='app_use' then actions.value:_value::int else null end) as app_uses,
max(case when actions.value:_action_type::string='checkin' then actions.value:_value::int else null end) as checkins,
max(case when actions.value:_action_type::string='comment' then actions.value:_value::int else null end) as comments,
max(case when actions.value:_action_type::string='credit_spent' then actions.value:_value::int else null end) as credit_spends,
max(case when actions.value:_action_type::string='games.plays' then actions.value:_value::int else null end) as game_plays,
max(case when actions.value:_action_type::string='landing_page_view' then actions.value:_value::int else null end) as landing_page_views,
max(case when actions.value:_action_type::string='like' then actions.value:_value::int else null end) as likes,
max(case when actions.value:_action_type::string='mobile_app_install' then actions.value:_value::int else null end) as mobile_app_installs,
-- actions OMNICHANNEL
max(case when actions.value:_action_type::string='omni_rate' then actions.value:_value::int else null end) as omni_ratings_submitted,
max(case when actions.value:_action_type::string='omni_initiated_checkout' then actions.value:_value::int else null end) as omni_initiated_checkouts,
max(case when actions.value:_action_type::string='omni_purchase' then actions.value:_value::int else null end) as omni_purchases,
max(case when actions.value:_action_type::string='link_click' then actions.value:_value::int else null end) as link_click,
max(case when actions.value:_action_type::string='omni_activate_app' then actions.value:_value::int else null end) as omni_app_activations,
max(case when actions.value:_action_type::string='omni_app_install' then actions.value:_value::int else null end) as omni_app_installs,
max(case when actions.value:_action_type::string='omni_view_content' then actions.value:_value::int else null end) as omni_content_views,
max(case when actions.value:_action_type::string='post_engagement' then actions.value:_value::int else null end) as post_engagement,
max(case when actions.value:_action_type::string='page_engagement' then actions.value:_value::int else null end) as page_engagement,
max(case when actions.value:_action_type::string='omni_tutorial_completion' then actions.value:_value::int else null end) as omni_tutorial_completions,
-- actions offsite conversion
max(case when actions.value:_action_type::string='offsite_conversion.fb_pixel_add_to_cart' then actions.value:_value::int else null end) as adds_to_cart,
max(case when actions.value:_action_type::string='offsite_conversion.fb_pixel_add_payment_info' then actions.value:_value::int else null end) as adds_payment_info,
max(case when actions.value:_action_type::string='offsite_conversion.fb_pixel_add_to_wishlist' then actions.value:_value::int else null end) as adds_to_wishlist,
max(case when actions.value:_action_type::string='offsite_conversion.fb_pixel_complete_registration' then actions.value:_value::int else null end) as completed_registrations,
max(case when actions.value:_action_type::string='offsite_conversion.fb_pixel_initiate_checkout' then actions.value:_value::int else null end) as initiates_checkout,
max(case when actions.value:_action_type::string='offsite_conversion.fb_pixel_lead' then actions.value:_value::int else null end) as leads,
max(case when actions.value:_action_type::string='offsite_conversion.fb_pixel_purchase' then actions.value:_value::int else null end) as pixel_purchases,
-- actions onsite conversions
max(case when actions.value:_action_type::string='onsite_conversion.flow_complete' then actions.value:_value::int else null end) as on_facebook_workflow_completions,
max(case when actions.value:_action_type::string='onsite_conversion.messaging_block' then actions.value:_value::int else null end) as blocked_messaging_conversations,
max(case when actions.value:_action_type::string='onsite_conversion.messaging_conversation_started_7d' then actions.value:_value::int else null end) as messaging_conversations_started,
max(case when actions.value:_action_type::string='onsite_conversion.messaging_first_reply' then actions.value:_value::int else null end) as new_messaging_conversations,
max(case when actions.value:_action_type::string='onsite_conversion.post_save' then actions.value:_value::int else null end) as post_saves,
max(case when actions.value:_action_type::string='onsite_conversion.purchase' then actions.value:_value::int else null end) as on_facebook_purchases,
max(case when actions.value:_action_type::string='photo_view' then actions.value:_value::int else null end) as page_photo_views,
max(case when actions.value:_action_type::string='post' then actions.value:_value::int else null end) as post_shares,
max(case when actions.value:_action_type::string='post_reaction' then actions.value:_value::int else null end) as post_reactions,
max(case when actions.value:_action_type::string='rsvp' then actions.value:_value::int else null end) as event_responses,
max(case when actions.value:_action_type::string='video_view' then actions.value:_value::int else null end) as three_sec_video_views,
max(case when actions.value:_action_type::string='start_trial_total' then actions.value:_value::int else null end) as trials_started,
max(case when actions.value:_action_type::string='submit_application_total' then actions.value:_value::int else null end) as applications_submitted,
max(case when actions.value:_action_type::string='subscribe_total' then actions.value:_value::int else null end) as subscriptions,
max(case when actions.value:_action_type::string='cancel_subscription_total' then actions.value:_value::int else null end) as canceled_subscriptions,
-- action values
max(case when action_values.value:_action_type::string='add_to_cart' then action_values.value:_value::float else null end) as add_to_cart_value,
max(case when action_values.value:_action_type::string='app_custom_event.fb_mobile_add_to_cart' then action_values.value:_value::float else null end) as fb_mobile_add_to_cart_value,
max(case when action_values.value:_action_type::string='app_custom_event.fb_mobile_initiated_checkout' then action_values.value:_value::float else null end) as fb_mobile_initiated_checkout_value,
max(case when action_values.value:_action_type::string='app_custom_event.fb_mobile_purchase' then action_values.value:_value::float else null end) as fb_mobile_purchase_value,
max(case when action_values.value:_action_type::string='app_custom_event.fb_mobile_rate' then action_values.value:_value::float else null end) as fb_mobile_rate_value,
max(case when action_values.value:_action_type::string='app_custom_event.other' then action_values.value:_value::float else null end) as fb_mobile_other_value,
max(case when action_values.value:_action_type::string='initiate_checkout' then action_values.value:_value::float else null end) as initiate_checkout_value,
max(case when action_values.value:_action_type::string='omni_add_to_cart' then action_values.value:_value::float else null end) as omni_add_to_cart_value,
max(case when action_values.value:_action_type::string='omni_initiated_checkout' then action_values.value:_value::float else null end) as omni_initiated_checkout_value,
max(case when action_values.value:_action_type::string='omni_purchase' then action_values.value:_value::float else null end) as omni_purchase_value,
max(case when action_values.value:_action_type::string='omni_rate' then action_values.value:_value::float else null end) as omni_rate_value,
-- unique actions
max(case when unique_actions.value:_action_type::string='purchase' then unique_actions.value:_value::int else null end) as purchase_unique,
max(case when unique_actions.value:_action_type::string='app_install' then unique_actions.value:_value::int else null end) as app_installs_unique,
max(case when unique_actions.value:_action_type::string='app_use' then unique_actions.value:_value::int else null end) as app_uses_unique,
max(case when unique_actions.value:_action_type::string='checkin' then unique_actions.value:_value::int else null end) as checkins_unique,
max(case when unique_actions.value:_action_type::string='comment' then unique_actions.value:_value::int else null end) as comments_unique,
max(case when unique_actions.value:_action_type::string='credit_spent' then unique_actions.value:_value::int else null end) as credit_spends_unique,
max(case when unique_actions.value:_action_type::string='games.plays' then unique_actions.value:_value::int else null end) as game_plays_unique,
max(case when unique_actions.value:_action_type::string='landing_page_view' then unique_actions.value:_value::int else null end) as landing_page_views_unique,
max(case when unique_actions.value:_action_type::string='like' then unique_actions.value:_value::int else null end) as likes_unique,
max(case when unique_actions.value:_action_type::string='mobile_app_install' then unique_actions.value:_value::int else null end) as mobile_app_installs_unique,
-- unique actions OMNICHANNEL
max(case when unique_actions.value:_action_type::string='omni_rate' then unique_actions.value:_value::int else null end) as omni_ratings_submitted_unique,
max(case when unique_actions.value:_action_type::string='omni_initiated_checkout' then unique_actions.value:_value::int else null end) as omni_initiated_checkouts_unique,
max(case when unique_actions.value:_action_type::string='omni_purchase' then unique_actions.value:_value::int else null end) as omni_purchases_unique,
max(case when unique_actions.value:_action_type::string='link_click' then unique_actions.value:_value::int else null end) as link_click_unique,
max(case when unique_actions.value:_action_type::string='omni_activate_app' then unique_actions.value:_value::int else null end) as omni_app_activations_unique,
max(case when unique_actions.value:_action_type::string='omni_app_install' then unique_actions.value:_value::int else null end) as omni_app_installs_unique,
max(case when unique_actions.value:_action_type::string='omni_view_content' then unique_actions.value:_value::int else null end) as omni_content_views_unique,
max(case when unique_actions.value:_action_type::string='post_engagement' then unique_actions.value:_value::int else null end) as post_engagement_unique,
max(case when unique_actions.value:_action_type::string='page_engagement' then unique_actions.value:_value::int else null end) as page_engagement_unique,
max(case when unique_actions.value:_action_type::string='omni_tutorial_completion' then unique_actions.value:_value::int else null end) as omni_tutorial_completions_unique,
-- unique actions offsite conversion
max(case when unique_actions.value:_action_type::string='offsite_conversion.fb_pixel_add_to_cart' then unique_actions.value:_value::int else null end) as adds_to_cart_unique,
max(case when unique_actions.value:_action_type::string='offsite_conversion.fb_pixel_add_payment_info' then unique_actions.value:_value::int else null end) as adds_payment_info_unique,
max(case when unique_actions.value:_action_type::string='offsite_conversion.fb_pixel_add_to_wishlist' then unique_actions.value:_value::int else null end) as adds_to_wishlist_unique,
max(case when unique_actions.value:_action_type::string='offsite_conversion.fb_pixel_complete_registration' then unique_actions.value:_value::int else null end) as completed_registrations_unique,
max(case when unique_actions.value:_action_type::string='offsite_conversion.fb_pixel_initiate_checkout' then unique_actions.value:_value::int else null end) as initiates_checkout_unique,
max(case when unique_actions.value:_action_type::string='offsite_conversion.fb_pixel_lead' then unique_actions.value:_value::int else null end) as leads_unique,
max(case when unique_actions.value:_action_type::string='offsite_conversion.fb_pixel_purchase' then unique_actions.value:_value::int else null end) as pixel_purchases_unique,
-- unique actions onsite conversions
max(case when unique_actions.value:_action_type::string='onsite_conversion.flow_complete' then unique_actions.value:_value::int else null end) as on_facebook_workflow_completions_unique,
max(case when unique_actions.value:_action_type::string='onsite_conversion.messaging_block' then unique_actions.value:_value::int else null end) as blocked_messaging_conversations_unique,
max(case when unique_actions.value:_action_type::string='onsite_conversion.messaging_conversation_started_7d' then unique_actions.value:_value::int else null end) as messaging_conversations_started_unique,
max(case when unique_actions.value:_action_type::string='onsite_conversion.messaging_first_reply' then unique_actions.value:_value::int else null end) as new_messaging_conversations_unique,
max(case when unique_actions.value:_action_type::string='onsite_conversion.post_save' then unique_actions.value:_value::int else null end) as post_saves_unique,
max(case when unique_actions.value:_action_type::string='onsite_conversion.purchase' then unique_actions.value:_value::int else null end) as on_facebook_purchases_unique,
max(case when unique_actions.value:_action_type::string='photo_view' then unique_actions.value:_value::int else null end) as page_photo_views_unique,
max(case when unique_actions.value:_action_type::string='post' then unique_actions.value:_value::int else null end) as post_shares_unique,
max(case when unique_actions.value:_action_type::string='post_reaction' then unique_actions.value:_value::int else null end) as post_reactions_unique,
max(case when unique_actions.value:_action_type::string='rsvp' then unique_actions.value:_value::int else null end) as event_responses_unique,
max(case when unique_actions.value:_action_type::string='video_view' then unique_actions.value:_value::int else null end) as three_sec_video_views_unique,
max(case when unique_actions.value:_action_type::string='start_trial_total' then unique_actions.value:_value::int else null end) as trials_started_unique,
max(case when unique_actions.value:_action_type::string='submit_application_total' then unique_actions.value:_value::int else null end) as applications_submitted_unique,
max(case when unique_actions.value:_action_type::string='subscribe_total' then unique_actions.value:_value::int else null end) as subscriptions_unique,
max(case when unique_actions.value:_action_type::string='cancel_subscription_total' then unique_actions.value:_value::int else null end) as canceled_subscriptions_unique,
-- purchase ROAS
max(case when purchase.value:_action_type::string='omni_purchase' then purchase.value:_value::float else null end) as omni_purchase_roas,
-- outbound clicks
max(case when unique_oc.value:_action_type::string='outbound_click' then unique_oc.value:_value::int else null end) as unique_outbound_clicks,
max(case when oc.value:_action_type::string='outbound_click' then oc.value:_value::int else null end) as outbound_clicks,
max(case when oc_ctr.value:_action_type::string = 'outbound_click' then oc_ctr.value:_value::float else null end) as outbound_clicks_ctr,
max(case when unique_oc_ctr.value:_action_type::string = 'outbound_click' then unique_oc_ctr.value:_value::float else null end) as unique_outbound_click_ctr
from
{fb_ads_db}.{fb_ads_schema}.FB_ADS_INSIGHTS as fact,
lateral flatten(input => fact._ACTIONS, OUTER => TRUE) actions,
lateral flatten(input => fact._ACTION_VALUES, OUTER => TRUE) action_values,
lateral flatten(input => fact._UNIQUE_OUTBOUND_CLICKS_CTR, OUTER => TRUE) unique_oc_ctr,
lateral flatten(input => fact._VIDEO_P100_WATCHED_ACTIONS, OUTER => TRUE) video_p100,
lateral flatten(input => fact._VIDEO_P95_WATCHED_ACTIONS, OUTER => TRUE) video_p95,
lateral flatten(input => fact._VIDEO_P75_WATCHED_ACTIONS, OUTER => TRUE) video_p75,
lateral flatten(input => fact._VIDEO_P50_WATCHED_ACTIONS, OUTER => TRUE) video_p50,
lateral flatten(input => fact._VIDEO_P25_WATCHED_ACTIONS, OUTER => TRUE) video_p25,
lateral flatten(input => fact._OUTBOUND_CLICKS_CTR, OUTER => TRUE) oc_ctr,
lateral flatten(input => fact._UNIQUE_ACTIONS, OUTER => TRUE) unique_actions,
lateral flatten(input => fact._OUTBOUND_CLICKS, OUTER => TRUE) oc,
lateral flatten(input => fact._VIDEO_AVG_TIME_WATCHED_ACTIONS, OUTER => TRUE) video_avg,
lateral flatten(input => fact._UNIQUE_OUTBOUND_CLICKS, OUTER => TRUE) unique_oc,
lateral flatten(input => fact._PURCHASE_ROAS, OUTER => TRUE) purchase
group by 
fact._UNIQUE_INLINE_LINK_CLICK_CTR, 
fact._ACCOUNT_NAME,
fact._UNIQUE_CTR,
fact._UNIQUE_CLICKS,
fact._DATE_START,
fact._DATE_STOP,
fact._CLICKS,
fact._REACH,
fact._CPC,
fact._UNIQUE_LINK_CLICKS_CTR,
fact._UNIQUE_INLINE_LINK_CLICKS,
fact._INLINE_LINK_CLICKS,
fact._SPEND,
fact._FREQUENCY,
fact._ACCOUNT_ID,
fact._CTR,
fact._CPM,
fact._IMPRESSIONS,
fact._CAMPAIGN_ID,
fact._CAMPAIGN_NAME,
fact._ADSET_ID,
fact._ADSET_NAME,
fact._AD_ID,
fact._AD_NAME,
fact._PUBLISHER_PLATFORM,
fact._PLATFORM_POSITION
  ) fact
left join {fb_ads_db}.{fb_ads_schema}.FB_ADS ads
on fact.ad_id = ads._ad_id
left join {fb_ads_db}.{fb_ads_schema}.FB_AD_CREATIVES creatives
on ads._creative_id = creatives._creative_id
;